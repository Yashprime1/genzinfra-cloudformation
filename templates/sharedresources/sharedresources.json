{
  "Transform": "AWS::LanguageExtensions",
  "Parameters": {
    "NetworkStack": {
      "Description": "Name of the stack that this stack references for networking",
      "Type": "String"
    },
    "StackProvisioningMode": {
      "AllowedValues": [
        "dev",
        "prod"
      ],
      "Default": "prod",
      "Description": "Specifies the environment (dev or prod) for provisioning CloudFormation stacks",
      "Type": "String"
    }
  },
  "Resources": {
    "ArtifactoryDockerUserCredentialsSecretsManagerSecret": {
      "Properties": {
        "Description": {
          "Fn::Sub": "This is a Secrets Manager secret for Artifactory docker user credentials"
        },
        "SecretString": "{\"username\":\"secret-user\",\"password\":\"secret-password\"}"
      },
      "Type": "AWS::SecretsManager::Secret"
    },
    "FluentBitConfigS3Bucket": {
      "Properties": {},
      "Type": "AWS::S3::Bucket"
    },
    "CallsockToAdminSignedCallStandardSqsQueue": {
      "Properties": {
        "QueueName": {
          "Fn::Sub": "${AWS::StackName}-callsock-to-admin-signedcall-sqs-queue"
        }
      },
      "Type": "AWS::SQS::Queue"
    },
    "SsmOutputS3Bucket": {
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        },
        "OwnershipControls": {
          "Rules": [
            {
              "ObjectOwnership": "BucketOwnerPreferred"
            }
          ]
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true
        }
      },
      "Type": "AWS::S3::Bucket"
    },
    "SsmOutputLoggingS3BucketPolicy": {
      "Properties": {
        "Bucket": {
          "Ref": "SsmOutputLoggingS3Bucket"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:PutObject"
              ],
              "Condition": {
                "ArnLike": {
                  "aws:SourceArn": {
                    "Fn::GetAtt": [
                      "SsmOutputS3Bucket",
                      "Arn"
                    ]
                  }
                }
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "logging.s3.amazonaws.com"
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    {
                      "Ref": "SsmOutputLoggingS3Bucket"
                    },
                    "/*"
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Type": "AWS::S3::BucketPolicy"
    },
    "MongoUserCredentialsSecretsManagerSecret": {
      "Properties": {
        "Description": {
          "Fn::Sub": "This is a Secrets Manager secret for Mongo user credentials"
        },
        "SecretString": "{\"username\":\"secret-user\",\"password\":\"secret-password\"}"
      },
      "Type": "AWS::SecretsManager::Secret"
    },
    "SignedCallsRSAPrivateSecretsManagerSecret": {
      "Properties": {
        "Description": {
          "Fn::Sub": "This is a Secrets Manager secret for ${AWS::StackName}-SignedCallsRSAPrivateSecretsManagerSecret"
        },
        "SecretString": "replacewithactualkey"
      },
      "Type": "AWS::SecretsManager::Secret"
    },
    "SignedCallsRSAPublicSecretsManagerSecret": {
      "Properties": {
        "Description": {
          "Fn::Sub": "This is a Secrets Manager secret for ${AWS::StackName}-SignedCallsRSAPublicSecretsManagerSecret"
        },
        "SecretString": "replacewithactualkey"
      },
      "Type": "AWS::SecretsManager::Secret"
    },
    "SplunkForwarderPasswordSecretsManagerSecret": {
      "Properties": {
        "Description": {
          "Fn::Sub": "This is a Secrets Manager secret for Splunk Forwarder Password"
        },
        "SecretString": "{\"password\":\"changeme\"}"
      },
      "Type": "AWS::SecretsManager::Secret"
    },
    "SplunkTokenSecretsManagerSecret": {
      "Properties": {
        "Description": {
          "Fn::Sub": "This is a Secrets Manager secret for ${AWS::StackName}-SplunkTokenSecretsManagerSecret"
        },
        "SecretString": "{\"splunk-token\":\"replacesplunktoken\"}"
      },
      "Type": "AWS::SecretsManager::Secret"
    },
    "RuncommandAutomationScriptsS3Bucket": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true
        }
      },
      "Type": "AWS::S3::Bucket"
    },
    "SsmKmsKey": {
      "Properties": {
        "Description": "KeyUsedForEncryptingSsmSessionLogs(CloudWatch)AndRunCommandOutput",
        "EnableKeyRotation": true,
        "Enabled": true,
        "KeyPolicy": {
          "Id": "key-default-1",
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    ":",
                    [
                      "arn:aws:iam:",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      "root"
                    ]
                  ]
                }
              },
              "Resource": "*",
              "Sid": "EnableIamPoliciesToGiveIamUsersAndRolesInTheAccountAccessToThisCmk"
            },
            {
              "Action": [
                "kms:Encrypt*",
                "kms:Decrypt*",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
                "kms:Describe*"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::Join": [
                    ".",
                    [
                      "logs",
                      {
                        "Ref": "AWS::Region"
                      },
                      "amazonaws",
                      "com"
                    ]
                  ]
                }
              },
              "Resource": "*",
              "Sid": "AllowCloudWatchToUseThisKey"
            }
          ],
          "Version": "2012-10-17"
        },
        "Tags": [
          {
            "Key": "ct-aws:cloudformation:stack-name",
            "Value": {
              "Ref": "AWS::StackName"
            }
          },
          {
            "Key": "Identifier",
            "Value": {
              "Fn::Sub": "${AWS::StackName}-SsmKmsKey"
            }
          }
        ]
      },
      "Type": "AWS::KMS::Key"
    },
    "SsmLogsLogGroup": {
      "Properties": {
        "RetentionInDays": 731
      },
      "Type": "AWS::Logs::LogGroup"
    },
    "SsmS3Bucket": {
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "BucketKeyEnabled": true,
              "ServerSideEncryptionByDefault": {
                "KMSMasterKeyID": {
                  "Fn::GetAtt": [
                    "SsmS3KmsKey",
                    "Arn"
                  ]
                },
                "SSEAlgorithm": "aws:kms"
              }
            }
          ]
        },
        "LifecycleConfiguration": {
          "Rules": [
            {
              "ExpirationInDays": "60",
              "Prefix": "jifa-heapdump/",
              "Status": "Enabled"
            }
          ]
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true
        }
      },
      "Type": "AWS::S3::Bucket"
    },
    "SsmS3KmsKey": {
      "Properties": {
        "Description": "KeyUsedForEncryptingSsmS3Bucket",
        "EnableKeyRotation": true,
        "Enabled": true,
        "KeyPolicy": {
          "Id": "key-default-1",
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    ":",
                    [
                      "arn:aws:iam:",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      "root"
                    ]
                  ]
                }
              },
              "Resource": "*",
              "Sid": "EnableIamPoliciesToGiveIamUsersAndRolesInTheAccountAccessToThisCmk"
            },
            {
              "Action": [
                "kms:Encrypt*",
                "kms:Decrypt*",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
                "kms:Describe*"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "ecs-tasks.amazonaws.com",
                  "ecs.amazonaws.com",
                  "s3.amazonaws.com",
                  "ec2.amazonaws.com"
                ]
              },
              "Resource": "*",
              "Sid": "AllowS3ECSandECSTASKSToUseThisKey"
            }
          ],
          "Version": "2012-10-17"
        },
        "Tags": [
          {
            "Key": "ct-aws:cloudformation:stack-name",
            "Value": {
              "Ref": "AWS::StackName"
            }
          },
          {
            "Key": "Identifier",
            "Value": {
              "Fn::Sub": "${AWS::StackName}-SsmS3KmsKey"
            }
          }
        ]
      },
      "Type": "AWS::KMS::Key"
    },
    "VoipSqsUploadSQSPolicy": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "SQS:SendMessage",
                "SQS:ReceiveMessage"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": "s3.amazonaws.com"
              },
              "Resource": {
                "Fn::GetAtt": [
                  "VoipSqsUploadSqsQueue",
                  "Arn"
                ]
              }
            }
          ]
        },
        "Queues": [
          {
            "Ref": "VoipSqsUploadSqsQueue"
          }
        ]
      },
      "Type": "AWS::SQS::QueuePolicy"
    },
    "VoipSqsUploadSqsQueue": {
      "Properties": {},
      "Type": "AWS::SQS::Queue"
    }
  },
  "Outputs": {
    "ArtifactoryDockerUserCredentialsSecretsManagerSecretName": {
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-ArtifactoryDockerUserCredentialsSecretsManagerSecretName"
        }
      },
      "Value": {
        "Ref": "ArtifactoryDockerUserCredentialsSecretsManagerSecret"
      }
    },
    "CallsockToAdminSignedCallStandardSqsQueueArn": {
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-CallsockToAdminSignedCallStandardSqsQueueArn"
        }
      },
      "Value": {
        "Fn::GetAtt": [
          "CallsockToAdminSignedCallStandardSqsQueue",
          "Arn"
        ]
      }
    },
    "CallsockToAdminSignedCallStandardSqsQueueUrl": {
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-CallsockToAdminSignedCallStandardSqsQueueUrl"
        }
      },
      "Value": {
        "Ref": "CallsockToAdminSignedCallStandardSqsQueue"
      }
    },
    "SignedCallsRSAPrivateSecretsManagerSecretName": {
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-SignedCallsRSAPrivateSecretsManagerSecretName"
        }
      },
      "Value": {
        "Ref": "SignedCallsRSAPrivateSecretsManagerSecret"
      }
    },
    "SignedCallsRSAPublicSecretsManagerSecretName": {
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-SignedCallsRSAPublicSecretsManagerSecretName"
        }
      },
      "Value": {
        "Ref": "SignedCallsRSAPublicSecretsManagerSecret"
      }
    },
    "SplunkForwarderPasswordSecretsManagerSecretName": {
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-Service-SplunkForwarderPasswordSecretsManagerSecretName"
        }
      },
      "Value": {
        "Ref": "SplunkForwarderPasswordSecretsManagerSecret"
      }
    },
    "SplunkTokenSecretsManagerSecretName": {
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-SplunkTokenSecretsManagerSecret"
        }
      },
      "Value": {
        "Ref": "SplunkTokenSecretsManagerSecret"
      }
    },
    "SsmLogsLogGroupArn": {
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-SsmLogsLogGroupArn"
        }
      },
      "Value": {
        "Fn::GetAtt": [
          "SsmLogsLogGroup",
          "Arn"
        ]
      }
    },
    "SsmS3BucketArn": {
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-SsmS3BucketArn"
        }
      },
      "Value": {
        "Fn::GetAtt": [
          "SsmS3Bucket",
          "Arn"
        ]
      }
    },
    "SsmS3BucketName": {
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-SsmS3BucketName"
        }
      },
      "Value": {
        "Ref": "SsmS3Bucket"
      }
    },
    "SsmOutputS3BucketArn": {
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-SsmOutputS3BucketArn"
        }
      },
      "Value": {
        "Fn::GetAtt": [
          "SsmOutputS3Bucket",
          "Arn"
        ]
      }
    },
    "VoipSqsUploadSQSQueueArn": {
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-VoipSqsUploadSQSQueueArn"
        }
      },
      "Value": {
        "Fn::GetAtt": [
          "VoipSqsUploadSqsQueue",
          "Arn"
        ]
      }
    },
    "VoipSqsUploadSQSQueueurl": {
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-VoipSqsUploadSQSQueueUrl"
        }
      },
      "Value": {
        "Ref": "VoipSqsUploadSqsQueue"
      }
    },

    "RuncommandAutomationScriptsS3BucketArn": {
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-RuncommandAutomationScriptsS3BucketArn"
        }
      },
      "Value": {
        "Fn::GetAtt": [
          "RuncommandAutomationScriptsS3Bucket",
          "Arn"
        ]
      }
    },
    "RuncommandAutomationScriptsS3BucketName": {
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-RuncommandAutomationScriptsS3BucketName"
        }
      },
      "Value": {
        "Ref": "RuncommandAutomationScriptsS3Bucket"
      }
    },
    "FluentBitConfigS3BucketArn": {
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-FluentBitConfigS3BucketArn"
        }
      },
      "Value": {
        "Fn::GetAtt": [
          "FluentBitConfigS3Bucket",
          "Arn"
        ]
      }
    },
    "MongoUserCredentialsSecretsManagerSecretName": {
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-MongoUserCredentialsSecretsManagerSecretName"
        }
      },
      "Value": {
        "Ref": "MongoUserCredentialsSecretsManagerSecret"
      }
    }
  }
}
