{
    "Parameters": {
      "VPCNetworkPrefix": {
        "Description": "Defines the first two octets of the VPC's CIDR block, with '.0.0/16' automatically appended",
        "Type": "String"
      }
    },
    "Resources": {
      "Ec2Vpc": {
        "Properties": {
          "CidrBlock": {
            "Fn::Join": [
              ".",
              [
                {
                  "Ref": "VPCNetworkPrefix"
                },
                "0.0/16"
              ]
            ]
          },
          "EnableDnsHostnames": true,
          "EnableDnsSupport": true,
          "InstanceTenancy": "default"
        },
        "Type": "AWS::EC2::VPC"
      },
      "RemoveDefaultEc2SecurityGroupEgress": {
        "Properties": {
          "DestinationSecurityGroupId": {
            "Fn::GetAtt": [
              "Ec2Vpc",
              "DefaultSecurityGroup"
            ]
          },
          "GroupId": {
            "Fn::GetAtt": [
              "Ec2Vpc",
              "DefaultSecurityGroup"
            ]
          },
          "IpProtocol": "-1"
        },
        "Type": "AWS::EC2::SecurityGroupEgress"
      },
      "RemoveDefaultEc2SecurityGroupIngress": {
        "Properties": {
          "GroupId": {
            "Fn::GetAtt": [
              "Ec2Vpc",
              "DefaultSecurityGroup"
            ]
          },
          "IpProtocol": "-1",
          "SourceSecurityGroupId": {
            "Fn::GetAtt": [
              "Ec2Vpc",
              "DefaultSecurityGroup"
            ]
          }
        },
        "Type": "AWS::EC2::SecurityGroupIngress"
      },
      "BlockRdpTrafficEc2NetworkAclEntry": {
        "Properties": {
          "CidrBlock": "0.0.0.0/0",
          "Egress": false,
          "NetworkAclId": {
            "Fn::GetAtt": [
              "Ec2Vpc",
              "DefaultNetworkAcl"
            ]
          },
          "PortRange": {
            "From": 3389,
            "To": 3389
          },
          "Protocol": "6",
          "RuleAction": "deny",
          "RuleNumber": 97
        },
        "Type": "AWS::EC2::NetworkAclEntry"
      },
      "Ec2InternetGateway": {
        "Properties": {},
        "Type": "AWS::EC2::InternetGateway"
      },
      "Ec2VpcGatewayAttachment": {
        "Properties": {
          "InternetGatewayId": {
            "Ref": "Ec2InternetGateway"
          },
          "VpcId": {
            "Ref": "Ec2Vpc"
          }
        },
        "Type": "AWS::EC2::VPCGatewayAttachment"
      },
      "PublicSubnetEc2RouteTable": {
        "Properties": {
          "VpcId": {
            "Ref": "Ec2Vpc"
          }
        },
        "Type": "AWS::EC2::RouteTable"
      },
      "PublicSubnetRouteTableDefaultEc2Route": {
        "DependsOn": [
          "Ec2VpcGatewayAttachment"
        ],
        "Properties": {
          "DestinationCidrBlock": "0.0.0.0/0",
          "GatewayId": {
            "Ref": "Ec2InternetGateway"
          },
          "RouteTableId": {
            "Ref": "PublicSubnetEc2RouteTable"
          }
        },
        "Type": "AWS::EC2::Route"
      },
      "NetworkingEc2Subnet": {
        "Properties": {
          "AvailabilityZone": {
            "Fn::Join": [
              "",
              [
                {
                  "Ref": "AWS::Region"
                },
                "a"
              ]
            ]
          },
          "CidrBlock": {
            "Fn::Join": [
              ".",
              [
                {
                  "Ref": "VPCNetworkPrefix"
                },
                "1.0/24"
              ]
            ]
          },
          "MapPublicIpOnLaunch": false,
          "VpcId": {
            "Ref": "Ec2Vpc"
          }
        },
        "Type": "AWS::EC2::Subnet"
      },
      "NetworkingEc2SubnetRouteTableAssociation": {
        "Properties": {
          "RouteTableId": {
            "Ref": "PublicSubnetEc2RouteTable"
          },
          "SubnetId": {
            "Ref": "NetworkingEc2Subnet"
          }
        },
        "Type": "AWS::EC2::SubnetRouteTableAssociation"
      },
      "NatGatewayEc2Eip": {
        "Properties": {
          "Domain": "vpc"
        },
        "Type": "AWS::EC2::EIP"
      },
      "Ec2NatGateway": {
        "DependsOn": [
          "Ec2InternetGateway"
        ],
        "Properties": {
          "AllocationId": {
            "Fn::GetAtt": [
              "NatGatewayEc2Eip",
              "AllocationId"
            ]
          },
          "SubnetId": {
            "Ref": "NetworkingEc2Subnet"
          },
          "Tags": [
            {
              "Key": "ct-aws:cloudformation:stack-name",
              "Value": {
                "Ref": "AWS::StackName"
              }
            }
          ]
        },
        "Type": "AWS::EC2::NatGateway"
      },
      "PrivateSubnetEc2RouteTable": {
        "Properties": {
          "VpcId": {
            "Ref": "Ec2Vpc"
          }
        },
        "Type": "AWS::EC2::RouteTable"
      },
      "PrivateSubnetRouteTableDefaultEc2Route": {
        "Properties": {
          "DestinationCidrBlock": "0.0.0.0/0",
          "NatGatewayId": {
            "Ref": "Ec2NatGateway"
          },
          "RouteTableId": {
            "Ref": "PrivateSubnetEc2RouteTable"
          }
        },
        "Type": "AWS::EC2::Route"
      },
      "S3Ec2VpcEndpoint": {
        "Properties": {
          "RouteTableIds": [
            {
              "Ref": "PublicSubnetEc2RouteTable"
            },
            {
              "Ref": "PrivateSubnetEc2RouteTable"
            }
          ],
          "ServiceName": {
            "Fn::Sub": "com.amazonaws.${AWS::Region}.s3"
          },
          "VpcId": {
            "Ref": "Ec2Vpc"
          }
        },
        "Type": "AWS::EC2::VPCEndpoint"
      },
      "SemaphoreAgentEc2Subnet": {
        "Properties": {
          "AvailabilityZone": {
            "Fn::Join": [
              "",
              [
                {
                  "Ref": "AWS::Region"
                },
                "a"
              ]
            ]
          },
          "CidrBlock": {
            "Fn::Join": [
              ".",
              [
                {
                  "Ref": "VPCNetworkPrefix"
                },
                "4.0/23"
              ]
            ]
          },
          "MapPublicIpOnLaunch": false,
          "VpcId": {
            "Ref": "Ec2Vpc"
          }
        },
        "Type": "AWS::EC2::Subnet"
      },
      "SemaphoreAgentEc2SubnetRouteTableAssociation": {
        "Properties": {
          "RouteTableId": {
            "Ref": "PrivateSubnetEc2RouteTable"
          },
          "SubnetId": {
            "Ref": "SemaphoreAgentEc2Subnet"
          }
        },
        "Type": "AWS::EC2::SubnetRouteTableAssociation"
      },
      "RemoteDockerHostEc2Subnet": {
        "Properties": {
          "AvailabilityZone": {
            "Fn::Join": [
              "",
              [
                {
                  "Ref": "AWS::Region"
                },
                "a"
              ]
            ]
          },
          "CidrBlock": {
            "Fn::Join": [
              ".",
              [
                {
                  "Ref": "VPCNetworkPrefix"
                },
                "7.0/28"
              ]
            ]
          },
          "MapPublicIpOnLaunch": false,
          "VpcId": {
            "Ref": "Ec2Vpc"
          }
        },
        "Type": "AWS::EC2::Subnet"
      },
      "RemoteDockerHostEc2SubnetRouteTableAssociation": {
        "Properties": {
          "RouteTableId": {
            "Ref": "PrivateSubnetEc2RouteTable"
          },
          "SubnetId": {
            "Ref": "RemoteDockerHostEc2Subnet"
          }
        },
        "Type": "AWS::EC2::SubnetRouteTableAssociation"
      }
    },
    "Outputs": {
      "VpcId": {
        "Export": {
          "Name": {
            "Fn::Sub": "${AWS::StackName}-VpcId"
          }
        },
        "Value": {
          "Ref": "Ec2Vpc"
        }
      },
      "RemoteDockerHostEc2SubnetId": {
        "Export": {
          "Name": {
            "Fn::Sub": "${AWS::StackName}-RemoteDockerHostEc2SubnetId"
          }
        },
        "Value": {
          "Ref": "RemoteDockerHostEc2Subnet"
        }
      },
      "SemaphoreAgentEc2SubnetId": {
        "Export": {
          "Name": {
            "Fn::Sub": "${AWS::StackName}-SemaphoreAgentEc2SubnetId"
          }
        },
        "Value": {
          "Ref": "SemaphoreAgentEc2Subnet"
        }
      },
      "VpcNetworkPrefix": {
        "Export": {
          "Name": {
            "Fn::Sub": "${AWS::StackName}-VpcNetworkPrefix"
          }
        },
        "Value": {
          "Ref": "VPCNetworkPrefix"
        }
      }
    }
  }