{
  "Description": "AWS CloudFormation template that defines all the necessary resources for setting up CleverTap's stack. Supported availability zones are specified in the Mappings section. Certificates and the base AMI ID are prerequisites.",
  "Parameters": {
    "AvailabilityZoneBSuffix": {
      "Default": "b",
      "Description": "The suffix to be used for Availability Zone B",
      "Type": "String"
    },
    "AvailabilityZoneCSuffix": {
      "Default": "c",
      "Description": "The suffix to be used for Availability Zone C",
      "Type": "String"
    },
    "EnableClientPrivateLinkSubnetConfiguration": {
      "AllowedValues": [
        "true",
        "false"
      ],
      "Default": "false",
      "Description": "Enables or disables Client Private Link subnet",
      "Type": "String"
    },
    "EnableDataScienceUploadS3bucketAccess": {
      "AllowedValues": [
        "true",
        "false"
      ],
      "Default": "false",
      "Description": "Enables or disables eu1 Data science upload S3 bucket access",
      "Type": "String"
    },
    "EnableNat1cEc2RouteTableConfiguration": {
      "AllowedValues": [
        "true",
        "false"
      ],
      "Default": "false",
      "Description": "Enables or disables Nat1c Route Table",
      "Type": "String"
    },
    "EnableNat1cEc2RouteTableDedicatedVpcEndpoint": {
      "AllowedValues": [
        "true",
        "false"
      ],
      "Default": "false",
      "Description": "Enables or disables Nat1c Route Table",
      "Type": "String"
    },
    "EnablePromotionsSubnetConfiguration": {
      "AllowedValues": [
        "true",
        "false"
      ],
      "Default": "false",
      "Description": "Enables or disables Promotions Subnet",
      "Type": "String"
    },
    "EnableReservedZeroNATGatewayConfiguration": {
      "AllowedValues": [
        "true",
        "false"
      ],
      "Default": "false",
      "Description": "Enables or disables Reserved Zero NAT Gateway configuration",
      "Type": "String"
    },
    "NatInstanceAmiId": {
      "Default": "ami-01d349c11390b782f",
      "Description": "NAT Instance AMI ID",
      "Type": "AWS::EC2::Image::Id"
    },
    "NatInstanceType": {
      "Default": "t2.micro",
      "Description": "NAT Instance Type",
      "Type": "String"
    },
    "StackProvisioningMode": {
      "AllowedValues": [
        "dev",
        "prod"
      ],
      "Default": "prod",
      "Description": "Specifies the environment (dev or prod) for provisioning CloudFormation stacks",
      "Type": "String"
    },
    "VPCNetworkPrefix": {
      "Default": "10.0",
      "Description": "Defines the first two octets of the VPC's CIDR block, with '.0.0/16' automatically appended",
      "Type": "String"
    }
  },
  "Conditions": {
    "IsNat1cEc2RouteTableConfigurationEnabled": {
      "Fn::Equals": [
        {
          "Ref": "EnableNat1cEc2RouteTableConfiguration"
        },
        "true"
      ]
    },
    "IsNat1cEc2RouteTableDedicatedVpcEndpointEnabled": {
      "Fn::Equals": [
        {
          "Ref": "EnableNat1cEc2RouteTableDedicatedVpcEndpoint"
        },
        "true"
      ]
    },
    "IsReservedZeroNATGatewayEnabled": {
      "Fn::And": [
        {
          "Fn::Equals": [
            {
              "Ref": "EnableReservedZeroNATGatewayConfiguration"
            },
            "true"
          ]
        },
        {
          "Condition":"StackIsProvisionedInProdMode"
        }
      ]
    },
    "StackIsProvisionedInDevMode": {
      "Fn::Equals": [
        {
          "Ref": "StackProvisioningMode"
        },
        "dev"
      ]
    },
    "StackIsProvisionedInProdMode": {
      "Fn::Equals": [
        {
          "Ref": "StackProvisioningMode"
        },
        "prod"
      ]
    }
  },
  "Resources": {
    "Vpc": {
      "Properties": {
        "CidrBlock": {
          "Fn::Join": [
            ".",
            [
              {
                "Ref": "VPCNetworkPrefix"
              },
              "0.0/16"
            ]
          ]
        },
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default"
      },
      "Type": "AWS::EC2::VPC"
    },
    "InternetGateway": {
      "Properties": {},
      "Type": "AWS::EC2::InternetGateway"
    },
    "VpcGatewayAttachment": {
      "Properties": {
        "InternetGatewayId": {
          "Ref": "InternetGateway"
        },
        "VpcId": {
          "Ref": "Vpc"
        }
      },
      "Type": "AWS::EC2::VPCGatewayAttachment"
    },
    "RouteTableIgw": {
      "Properties": {
        "VpcId": {
          "Ref": "Vpc"
        }
      },
      "Type": "AWS::EC2::RouteTable"
    },
    "RouteTableIgwRouteWorld": {
      "DependsOn": [
        "VpcGatewayAttachment"
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "InternetGateway"
        },
        "RouteTableId": {
          "Ref": "RouteTableIgw"
        }
      },
      "Type": "AWS::EC2::Route"
    },
    "CallSocksAzAEc2Subnet": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AWS::Region"
              },
              "a"
            ]
          ]
        },
        "CidrBlock": {
          "Fn::Join": [
            ".",
            [
              {
                "Ref": "VPCNetworkPrefix"
              },
              "46.0/24"
            ]
          ]
        },
        "MapPublicIpOnLaunch": true,
        "VpcId": {
          "Ref": "Vpc"
        }
      },
      "Type": "AWS::EC2::Subnet"
    },
    "CallSocksAzAEc2SubnetRouteTableAssociation": {
      "Properties": {
        "RouteTableId": {
          "Ref": "RouteTableIgw"
        },
        "SubnetId": {
          "Ref": "CallSocksAzAEc2Subnet"
        }
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation"
    },
    "CallSocksAzBEc2Subnet": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AWS::Region"
              },
              "b"
            ]
          ]
        },
        "CidrBlock": {
          "Fn::Join": [
            ".",
            [
              {
                "Ref": "VPCNetworkPrefix"
              },
              "47.0/24"
            ]
          ]
        },
        "MapPublicIpOnLaunch": true,
        "VpcId": {
          "Ref": "Vpc"
        }
      },
      "Type": "AWS::EC2::Subnet"
    },
    "CallSocksAzBEc2SubnetRouteTableAssociation": {
      "Properties": {
        "RouteTableId": {
          "Ref": "RouteTableIgw"
        },
        "SubnetId": {
          "Ref": "CallSocksAzBEc2Subnet"
        }
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation"
    }
  },
  "Outputs": {
    "CallSocksAzAEc2SubnetId": {
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-CallSocksAzAEc2SubnetId"
        }
      },
      "Value": {
        "Ref": "CallSocksAzAEc2Subnet"
      }
    },
    "CallSocksAzBEc2SubnetId": {
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-CallSocksAzBEc2SubnetId"
        }
      },
      "Value": {
        "Ref": "CallSocksAzBEc2Subnet"
      }
    },
    "VpcId": {
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-VpcId"
        }
      },
      "Value": {
        "Ref": "Vpc"
      }
    },
    "VpcNetworkPrefix": {
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-VpcNetworkPrefix"
        }
      },
      "Value": {
        "Ref": "VPCNetworkPrefix"
      }
    }
  }
}