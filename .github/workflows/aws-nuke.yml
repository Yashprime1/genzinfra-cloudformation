name: AWS Nuke Account

run-name: AWS Nuke - ${{ inputs.AWS_ACCOUNT_ID }}-${{ github.run_number }}

on:
  workflow_dispatch:
    inputs:
      AWS_ACCOUNT_ID:
        type: string
        description: AWS Account ID to nuke
        required: true
      AWS_ACCESS_KEY_ID:
        type: string
        description: AWS Access Key ID (will be masked)
        required: true
      AWS_SECRET_ACCESS_KEY:
        type: string
        description: AWS Secret Access Key (will be masked)
        required: true
      CONFIRM_NUKE:
        type: boolean
        description: I understand this will DELETE ALL RESOURCES in the specified AWS account
        required: true
        default: false

env:
  AWS_ACCOUNT_ID: ${{ inputs.AWS_ACCOUNT_ID }}

jobs:
  aws-nuke:
    runs-on: ubuntu-latest
    timeout-minutes: 120
    env:
      AWS_ACCESS_KEY_ID: ${{ inputs.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ inputs.AWS_SECRET_ACCESS_KEY }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Validate Inputs
        run: |
          echo "Validating inputs..."
          
          # Check if confirmation is provided
          if [ "${{ inputs.CONFIRM_NUKE }}" != "true" ]; then
            echo "ERROR: You must confirm that you understand this will DELETE ALL RESOURCES"
            echo "Please set 'CONFIRM_NUKE' to true to proceed"
            exit 1
          fi
          
          # Validate AWS Account ID format
          if [[ ! "${{ inputs.AWS_ACCOUNT_ID }}" =~ ^[0-9]{12}$ ]]; then
            echo "ERROR: Invalid AWS Account ID format. Must be 12 digits."
            exit 1
          fi
          
          # Check if credentials are provided
          if [ -z "${{ inputs.AWS_ACCESS_KEY_ID }}" ] || [ -z "${{ inputs.AWS_SECRET_ACCESS_KEY }}" ]; then
            echo "ERROR: AWS Access Key ID and Secret Access Key are required"
            exit 1
          fi
          
          echo "Input validation passed"

      - name: Display Configuration
        run: |
          echo "AWS Nuke Configuration"
          echo "Account ID: ${{ inputs.AWS_ACCOUNT_ID }}"
          echo "Access Key ID: ${AWS_ACCESS_KEY_ID:0:4}****${AWS_ACCESS_KEY_ID: -4}"
          echo "Secret Access Key: ****"
          
      - name: Verify AWS Credentials
        run: |
          echo "Verifying AWS credentials..."
          
          # Test AWS credentials
          aws sts get-caller-identity
          
          # Verify we're in the correct account
          CALLER_ACCOUNT=$(aws sts get-caller-identity --query Account --output text)
          if [ "$CALLER_ACCOUNT" != "${{ inputs.AWS_ACCOUNT_ID }}" ]; then
            echo "ERROR: Credentials are for account $CALLER_ACCOUNT, but you specified ${{ inputs.AWS_ACCOUNT_ID }}"
            exit 1
          fi
          
          echo "AWS credentials verified for account $CALLER_ACCOUNT"

      - name: Download AWS Nuke
        run: |
          echo "Downloading AWS nuke"
          wget -c https://github.com/rebuy-de/aws-nuke/releases/download/v2.25.0/aws-nuke-v2.25.0-linux-amd64.tar.gz -O - | sudo tar -xz -C /usr/local/bin
          sudo mv /usr/local/bin/aws-nuke-v2.25.0-linux-amd64 /usr/local/bin/aws-nuke
          sudo chmod +x /usr/local/bin/aws-nuke

          # Verify installation
          aws-nuke version

      - name: Update Config File with Account ID
        run: |
          echo "Updating config file for account ${{ inputs.AWS_ACCOUNT_ID }}..."
          
          # Replace the templated account ID with the actual account ID
          sed -i "s/AWS_ACCOUNT_ID_PLACEHOLDER/${{ inputs.AWS_ACCOUNT_ID }}/g" aws-nuke-config.yaml
          
          echo "Config file updated for account ${{ inputs.AWS_ACCOUNT_ID }}"
          
          # Validate config file syntax
          aws-nuke --config aws-nuke-config.yaml --access-key-id ${AWS_ACCESS_KEY_ID} --secret-access-key ${AWS_SECRET_ACCESS_KEY} resource-types > /dev/null
          echo "Config file syntax is valid"

      - name: List Resources to be Deleted
        run: |
          aws-nuke --config aws-nuke-config.yaml --access-key-id ${AWS_ACCESS_KEY_ID} --secret-access-key ${AWS_SECRET_ACCESS_KEY} resource-types
          
      - name: Execute AWS Nuke
        run: |
          echo "EXECUTING AWS NUKE - THIS WILL DELETE ALL RESOURCES"
          echo "Account: ${{ inputs.AWS_ACCOUNT_ID }}"
          echo "Timestamp: $(date)"
          
          # Execute aws-nuke with the specified flags
          aws-nuke \
            --config aws-nuke-config.yaml \
            --access-key-id ${AWS_ACCESS_KEY_ID} --secret-access-key ${AWS_SECRET_ACCESS_KEY} \
            --no-dry-run \
            --force
          
          echo "AWS Nuke execution completed"

      - name: Verify Account is Clean
        run: |
          echo "Verifying account is clean..."
          
          # List remaining resources
          REMAINING_RESOURCES=$(aws-nuke --config aws-nuke-config.yaml --access-key-id ${AWS_ACCESS_KEY_ID} --secret-access-key ${AWS_SECRET_ACCESS_KEY} resource-types 2>/dev/null | wc -l)
          
          if [ "$REMAINING_RESOURCES" -gt 0 ]; then
            echo "WARNING: $REMAINING_RESOURCES resource types still exist"
            echo "Remaining resources:"
            aws-nuke --config aws-nuke-config.yaml --access-key-id ${AWS_ACCESS_KEY_ID} --secret-access-key ${AWS_SECRET_ACCESS_KEY} resource-types
          else
            echo "Account appears to be clean"
          fi

      - name: Create Summary Report
        if: always()
        run: |
          echo "## AWS Nuke Execution Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Execution Date:** $(date)" >> $GITHUB_STEP_SUMMARY
          echo "- **Account ID:** ${{ inputs.AWS_ACCOUNT_ID }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Access Key ID:** ${AWS_ACCESS_KEY_ID:0:4}****${AWS_ACCESS_KEY_ID: -4}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ job.status }}" == "success" ]; then
            echo "Success" >> $GITHUB_STEP_SUMMARY
            echo "AWS Nuke execution completed successfully." >> $GITHUB_STEP_SUMMARY
          else
            echo "Failed" >> $GITHUB_STEP_SUMMARY
            echo "AWS Nuke execution failed. Check the logs for details." >> $GITHUB_STEP_SUMMARY
          fi
