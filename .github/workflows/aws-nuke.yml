name: AWS Nuke Account

run-name: AWS Nuke - ${{ inputs.AWS_ACCOUNT_ID }}-${{ github.run_number }}

on:
  workflow_dispatch:
    inputs:
      AWS_ACCOUNT_ID:
        type: string
        description: AWS Account ID to nuke
        required: true
      AWS_ACCESS_KEY_ID:
        type: string
        description: AWS Access Key ID (will be masked)
        required: true
      AWS_SECRET_ACCESS_KEY:
        type: string
        description: AWS Secret Access Key (will be masked)
        required: true
      CONFIRM_NUKE:
        type: boolean
        description: I understand this will DELETE ALL RESOURCES in the specified AWS account
        required: true
        default: false

env:
  AWS_ACCOUNT_ID: ${{ inputs.AWS_ACCOUNT_ID }}

jobs:
  aws-nuke:
    runs-on: ubuntu-latest
    timeout-minutes: 120
    env:
      AWS_ACCESS_KEY_ID: ${{ inputs.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ inputs.AWS_SECRET_ACCESS_KEY }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Mask Credentials
        run: |
          AWS_ACCESS_KEY_ID=$(jq -r '.inputs.AWS_ACCESS_KEY_ID' $GITHUB_EVENT_PATH)
          AWS_SECRET_ACCESS_KEY=$(jq -r '.inputs.AWS_SECRET_ACCESS_KEY' $GITHUB_EVENT_PATH)
          echo ::add-mask::$AWS_ACCESS_KEY_ID
          echo ::add-mask::$AWS_SECRET_ACCESS_KEY
          echo AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID >> $GITHUB_ENV
          echo AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY >> $GITHUB_ENV

      - name: Validate Inputs
        run: |  
          # Check if confirmation is provided
          if [ "${{ inputs.CONFIRM_NUKE }}" != "true" ]; then
            echo "ERROR: You must confirm that you understand this will DELETE ALL RESOURCES"
            echo "Please set 'CONFIRM_NUKE' to true to proceed"
            exit 1
          fi
          
          # Validate AWS Account ID format
          if [[ ! "${{ inputs.AWS_ACCOUNT_ID }}" =~ ^[0-9]{12}$ ]]; then
            echo "ERROR: Invalid AWS Account ID format. Must be 12 digits."
            exit 1
          fi
          
          # Check if credentials are provided
          if [ -z "${{ inputs.AWS_ACCESS_KEY_ID }}" ] || [ -z "${{ inputs.AWS_SECRET_ACCESS_KEY }}" ]; then
            echo "ERROR: AWS Access Key ID and Secret Access Key are required"
            exit 1
          fi
          
          echo "Input validation passed"
   
      - name: Verify AWS Creds for the account to be nuked
        run: |
          aws sts get-caller-identity
          CALLER_ACCOUNT=$(aws sts get-caller-identity --query Account --output text)
          if [ "$CALLER_ACCOUNT" != "${{ inputs.AWS_ACCOUNT_ID }}" ]; then
            echo "ERROR: Credentials are for account $CALLER_ACCOUNT, but you specified ${{ inputs.AWS_ACCOUNT_ID }}"
            exit 1
          fi
          echo "AWS credentials verified for account $CALLER_ACCOUNT"

      - name: Download AWS Nuke Tool
        run: |
          wget -c https://github.com/rebuy-de/aws-nuke/releases/download/v2.25.0/aws-nuke-v2.25.0-linux-amd64.tar.gz -O - | sudo tar -xz -C /usr/local/bin
          sudo mv /usr/local/bin/aws-nuke-v2.25.0-linux-amd64 /usr/local/bin/aws-nuke
          sudo chmod +x /usr/local/bin/aws-nuke
          aws-nuke version

      - name: Update Config File with Account ID
        run: |
          echo "Updating config file for account ${{ inputs.AWS_ACCOUNT_ID }}..."        
          sed -i "s/AWS_ACCOUNT_ID_PLACEHOLDER/${{ inputs.AWS_ACCOUNT_ID }}/g" aws-nuke-config.yaml
          echo "Config file updated for account ${{ inputs.AWS_ACCOUNT_ID }}"
        
      - name: Execute AWS Nuke
        run: |
          echo "EXECUTING AWS NUKE"
          echo "Account: ${{ inputs.AWS_ACCOUNT_ID }}"
          echo "Timestamp: $(date)"
          
          aws-nuke \
            --config aws-nuke-config.yaml \
            --access-key-id ${AWS_ACCESS_KEY_ID} --secret-access-key ${AWS_SECRET_ACCESS_KEY} \
            --no-dry-run \
            --force
          
          echo "AWS Nuke execution completed"